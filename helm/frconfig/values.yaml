# Default values for frconfig.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1


config:
  name: frconfig
  strategy: git
  #strategy: "shared-pvc"
  

# Shared Storage Configuration
storage:
  # This class should map to a shared read write many (RWX) PVC type. NFS, for example.
  # On minikube the "standard" storage class support RWX.
  class: "nfs"
  # The name of the shared storage volume. This is the platform default, and should not be changed.
  name: "frconfig"
  # The size of the shared storage. Needs to be large enough to contain the git config repo.
  size: "10Gi"
  # If you want to skip PVC creation, deploy with --set storage.createPVC=false.
  # This is useful if you have an existing PVC that you want to remount, or
  # if your configuration does not use shared RWX storage.
  createPVC: true

git:
  # git repo to clone. The value below is a public git repo that does not require authentication.
  # Public, read only repo:
  repo: "https://github.com/ForgeRock/forgeops-init.git"
  branch: master
  # You can set this to the name of a secret that contains a key "id_rsa"
  # The secret contains the git ssh key that has permissions to clone and/or update the git repo.
  # If you don't set this value, the chart includes a default dummy ssh key value. The dummy
  # value can clone a public https:// git repo.
  #sshSecretName: "git-ssh-key"
  # The git-init process can run a search / replace using sed. This should be avoided
  # if possible in preference to using commons config.
  # sedFilter: "-e s/some.string/some.replacement/ -e s/foo/bar/"


component: git

image:
  repository: forgerock-docker-public.bintray.io/forgerock
  tag: 6.0.1
  pullPolicy: IfNotPresent

# The entrypoint that is run by the main git container. 
# "pause" will wait for a user to exec into the container to run /git-sync.sh, or any other git commands they wish.
# "syncloop" will run a loop every 5 min that commits all changes to a branch (autosave-NAMESPACE) and pushes it to the upstream git repo.
# Note that if you want to push, you must use ssh and not https (repo must start with git:, not https;//), and you must have a 
# a secret configured that holds your id_rsa private key for your repo.
command: pause

resources: 
  requests:
    memory: 128Mi
  limits:
    memory: 128Mi

